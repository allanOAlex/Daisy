@page "/indexcarousel"
@inject HttpClient Http
@inject DialogService DialogService
@inject ICarouselApiClient carouselApiClient


@if (carousels.Count() > 0)
{
    <BSCarousel NumberOfItems="@carousels.Count()" HasControls="true">
        <div class="carousel-inner img-fluid">
            @for (int i = 0; i < carousels.Count(); i++)
            {
                @foreach (var item in carousels)
                {
                    <BSCarouselItem>
                        <RadzenImage Path="@($"data:{item.ImageType};base64,{Convert.ToBase64String(item.ImageData)}")" Style="width:100%; height:500px;" />
                        <BSCarouselCaption Class="d-none d-md-block">
                            <h5>@item.Label</h5>
                            <p>@item.Paragraph.</p>
                        </BSCarouselCaption>
                    </BSCarouselItem>
                }
            }
        </div>
    </BSCarousel>
}
else
{
    <div class="hidden-scroll" style="display:flex; flex-direction:column; justify-content:space-between; align-content:center; overflow-y: scroll;">
        <RadzenCard class="border-0 bg-transparent align-content-center">
            <div class="row">
                <div class="text-center">
                    <RadzenText TextStyle="TextStyle.Subtitle2" Style="color: #424874" class="mb-0"><strong>@(noCarousel)</strong></RadzenText>
                    <RadzenText TextStyle="TextStyle.Caption" Style="color:#c5a600;" class="mb-0"><strong>@(caption)</strong></RadzenText>
                </div>
            </div>
        </RadzenCard>
    </div>
    
}





@code {

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string? Image { get; set; } = "";

    IEnumerable<GetAllCarouselsResponse> carousels = new List<GetAllCarouselsResponse>();

    public string noCarousel = "Carousel items will be displayed here when available.";
    public string caption = "Thank you for choosing and working with us!!";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        try
        {
            var response = await carouselApiClient.GetAllCarousels();
            if (response.Count > 0)
            {
                carousels = response;
            }
            else
            {
                carousels = response;
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    
    }

}
